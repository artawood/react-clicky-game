{"ast":null,"code":"import _classCallCheck from \"/Users/artawood/Desktop/CodingBootcamp/GitRepo/react-clicky-game/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/artawood/Desktop/CodingBootcamp/GitRepo/react-clicky-game/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/artawood/Desktop/CodingBootcamp/GitRepo/react-clicky-game/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/artawood/Desktop/CodingBootcamp/GitRepo/react-clicky-game/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/artawood/Desktop/CodingBootcamp/GitRepo/react-clicky-game/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/artawood/Desktop/CodingBootcamp/GitRepo/react-clicky-game/src/App.js\";\nimport React, { Component } from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport Jumbotron from './components/Jumbotron';\nimport Card from './components/Main/Card';\nimport characters from \"./characters.json\"; // import './App.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      score: 0,\n      topScore: 0,\n      characters: characters //When the character is clicked, the value of 'clicked' property is set to 'true'\n\n    };\n\n    _this.charactersClicked = function (name, clicked) {\n      // alert(`You clicked ${name}`) // test for ensuring the right card is clicked\n      if (!clicked) {\n        alert(\"You clicked \".concat(name, \" once\"));\n\n        _this.setState({\n          score: _this.state.score + 1,\n          topScore: _this.state.topScore + 1\n        });\n      } else if (clicked) {\n        alert(\"You clicked \".concat(name, \" already!\"));\n\n        _this.setState({\n          score: 0\n        });\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Jumbotron, {\n        score: this.state.score,\n        topScore: this.state.topScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"row\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, this.state.characters.map(function (character) {\n        return React.createElement(Card, {\n          charactersClicked: _this2.charactersClicked,\n          id: character.id,\n          key: character.id,\n          name: character.name,\n          image: character.image,\n          occupation: character.occupation,\n          location: character.location,\n          clicked: character.clicked,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44\n          },\n          __self: this\n        });\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/artawood/Desktop/CodingBootcamp/GitRepo/react-clicky-game/src/App.js"],"names":["React","Component","Navbar","Jumbotron","Card","characters","App","state","score","topScore","charactersClicked","name","clicked","alert","setState","map","character","id","image","occupation","location"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,OAAOC,SAAP,MAAsB,wBAAtB;AACA,OAAOC,IAAP,MAAiB,wBAAjB;AACA,OAAOC,UAAP,MAAuB,mBAAvB,C,CACA;;IAEMC,G;;;;;;;;;;;;;;;;;UAEJC,K,GAAQ;AACNC,MAAAA,KAAK,EAAE,CADD;AAENC,MAAAA,QAAQ,EAAE,CAFJ;AAGNJ,MAAAA,UAAU,EAAVA,UAHM,CAMR;;AANQ,K;;UAORK,iB,GAAoB,UAACC,IAAD,EAAMC,OAAN,EAAkB;AAClC;AACA,UAAG,CAACA,OAAJ,EAAa;AACbC,QAAAA,KAAK,uBAAgBF,IAAhB,WAAL;;AACA,cAAKG,QAAL,CAAc;AACZN,UAAAA,KAAK,EAAE,MAAKD,KAAL,CAAWC,KAAX,GAAmB,CADd;AAEZC,UAAAA,QAAQ,EAAE,MAAKF,KAAL,CAAWE,QAAX,GAAsB;AAFpB,SAAd;AAID,OANC,MAMK,IAAIG,OAAJ,EAAa;AAClBC,QAAAA,KAAK,uBAAgBF,IAAhB,eAAL;;AACA,cAAKG,QAAL,CAAc;AACZN,UAAAA,KAAK,EAAE;AADK,SAAd;AAGD;AACF,K;;;;;;;6BAEQ;AAAA;;AACP,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,oBAAC,SAAD;AACE,QAAA,KAAK,EAAG,KAAKD,KAAL,CAAWC,KADrB;AAEE,QAAA,QAAQ,EAAG,KAAKD,KAAL,CAAWE,QAFxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,EAME;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKF,KAAL,CAAWF,UAAX,CAAsBU,GAAtB,CAA0B,UAAAC,SAAS;AAAA,eAClC,oBAAC,IAAD;AACA,UAAA,iBAAiB,EAAE,MAAI,CAACN,iBADxB;AAEA,UAAA,EAAE,EAAEM,SAAS,CAACC,EAFd;AAGA,UAAA,GAAG,EAAED,SAAS,CAACC,EAHf;AAIA,UAAA,IAAI,EAAED,SAAS,CAACL,IAJhB;AAKA,UAAA,KAAK,EAAEK,SAAS,CAACE,KALjB;AAMA,UAAA,UAAU,EAAEF,SAAS,CAACG,UANtB;AAOA,UAAA,QAAQ,EAAEH,SAAS,CAACI,QAPpB;AAQA,UAAA,OAAO,EAAEJ,SAAS,CAACJ,OARnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADkC;AAAA,OAAnC,CADH,CADF,CANF,CADF;AA0BD;;;;EApDeX,S;;AAuDlB,eAAeK,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport Navbar from './components/Navbar/Navbar';\nimport Jumbotron from './components/Jumbotron';\nimport Card from './components/Main/Card';\nimport characters from \"./characters.json\";\n// import './App.css';\n\nclass App extends Component {\n  // Initial state\n  state = {\n    score: 0,\n    topScore: 0,\n    characters\n  }\n\n  //When the character is clicked, the value of 'clicked' property is set to 'true'\n  charactersClicked = (name,clicked) => {\n      // alert(`You clicked ${name}`) // test for ensuring the right card is clicked\n      if(!clicked) {\n      alert(`You clicked ${name} once`)\n      this.setState({\n        score: this.state.score + 1,\n        topScore: this.state.topScore + 1\n      });\n    } else if (clicked) {\n      alert(`You clicked ${name} already!`)\n      this.setState({\n        score: 0\n      })\n    }\n  };\n\n  render() {\n    return (\n      <div>\n          <Navbar/>\n          <Jumbotron\n            score ={this.state.score}\n            topScore ={this.state.topScore}\n          />\n        <div className=\"container\">\n          <div className=\"row\">\n            {this.state.characters.map(character => (\n              <Card\n              charactersClicked={this.charactersClicked}\n              id={character.id}\n              key={character.id}\n              name={character.name}\n              image={character.image}\n              occupation={character.occupation}\n              location={character.location}\n              clicked={character.clicked}\n              />\n            ))}\n          </div>\n          \n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}